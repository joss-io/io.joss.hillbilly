buildscript {
    repositories {
      mavenCentral()
    }
    dependencies {
      classpath 'net.sf.proguard:proguard-gradle:5.2.1'
      classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.1.1')
    }
}

plugins {
  id 'java'
  id 'maven'
  id 'com.github.johnrengelman.shadow' version '1.2.2'
  id "com.jfrog.artifactory" version "3.1.0"
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'eclipse'

group = "com.jive.hillbilly"

version = currentVersion

repositories {
    def ENV = System.getenv()
    mavenCentral()
    maven {
	    url 'https://getjive.artifactoryonline.com/getjive/libs-snapshot-local'
	    credentials {
            username = ENV['ARTIFACTORY_USER']
            password = ENV['ARTIFACTORY_API_KEY']
	    }
	} 
	
    maven {
	    url 'http://repo.ftw.jiveip.net/content/groups/jive-all'
	}    
	   
}


compileJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}


sourceSets.all { set ->

    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = baseName + "-$set.name"
        from set.output
    }
    
    java {
    	srcDir "${set.name}/src/main/java"
    }

    artifacts {
        archives jarTask
    }    
    
}


sourceSets {
    api
    core
}

configurations {
	provided
}

configurations.all {
}

eclipse {
	classpath {
		plusConfigurations += [ configurations.provided ]
	}
}

sourceSets {
    api {
        compileClasspath += configurations.provided 
    }
    core {
        compileClasspath += configurations.provided 
    }
}


dependencies {

    provided 'org.projectlombok:lombok:1.16.6'

    apiCompile 'com.google.guava:guava:18.0'
    coreCompile 'com.google.guava:guava:18.0'
    

    // test dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.guava:guava:18.0'

    coreCompile sourceSets.api.output
    
    coreCompile 'com.jive.sip:sip:2.0-SNAPSHOT'
    coreCompile 'com.google.guava:guava:18.0'

    coreCompile ('com.jive.myco.commons:myco-commons-concurrent:0.2.10') {
		exclude group: 'org.slf4j'   
		exclude group: 'ch.qos.logback'
		exclude group: 'com.google.code.findbugs'
		exclude group: 'com.google.guava'
	}
	

    coreCompile 'org.fusesource.hawtdispatch:hawtdispatch:1.21'
    
	coreCompile 'org.apache.commons:commons-lang3:3.4'
    
	// coreCompile 'io.netty:netty-all:4.1.0.Beta7'
    provided 'org.slf4j:slf4j-api:1.7.12'

    testCompile sourceSets.api.output
    testCompile sourceSets.core.output
    // testCompile sourceSets.core.output
    
    runtime configurations.apiRuntime
    // runtime configurations.stackRuntime
    runtime configurations.coreRuntime
    
}

jar {
    from sourceSets.api.output
    from sourceSets.core.output
}


shadowJar {

  dependsOn apiClasses, coreClasses
  
  from sourceSets.core.output
  
  mergeServiceFiles()
  
  relocate('com.google', 'com.jive.hillbilly.shaded.google') {
  }
  
  relocate('io.netty', 'com.jive.hillbilly.shaded.netty') {
  }

  relocate('com.jive.sip', 'com.jive.hillbilly.shaded.sip') {
  }

  relocate('com.jive.myco', 'com.jive.hillbilly.shaded.myco') {
  }

  relocate('org.fusesource.hawtdispatch', 'com.jive.hillbilly.shaded.hawtdispatch') {
  }
 
  relocate('org.apache', 'com.jive.hillbilly.shaded.apache') {
  }
 
}


task proguard(type: proguard.gradle.ProGuardTask) {
  dependsOn shadowJar
  configuration 'proguard.txt'
  injars shadowJar.outputs 
  outjars 'build/libs/${archivesBaseName}.out.jar'
}


publishing {
	publications {
		mavenJar(MavenPublication) {
			artifact proguard.outputs.files.singleFile
			artifactId 'hillbilly'
		}
	}
}

artifactory {

    contextUrl = 'https://getjive.artifactoryonline.com/getjive/'
 
    def ENV = System.getenv()
    
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = ENV['ARTIFACTORY_USER']
            password = ENV['ARTIFACTORY_API_KEY']
            maven = true
        }
        
	    defaults {
		    publications('mavenJar')
		    publishArtifacts = true
		    properties = ['dev.team': 'rtc' ]
		    publishPom = true
	    }           
        
    }    
    
    clientConfig.publisher.repoKey = 'libs-snapshot-local'
    clientConfig.publisher.username = ENV['ARTIFACTORY_USER'] 
    clientConfig.publisher.password = ENV['ARTIFACTORY_API_KEY']
        
}


